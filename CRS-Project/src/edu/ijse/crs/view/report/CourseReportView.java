/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.crs.view.report;

import edu.ijse.crs.controller.CourseController;
import edu.ijse.crs.controller.EnrollmentController;
import edu.ijse.crs.controller.StudentController;
import edu.ijse.crs.controller.UserController;
import edu.ijse.crs.dto.CourseDTO;
import edu.ijse.crs.dto.EnrollmentDTO;
import edu.ijse.crs.dto.StudentDTO;
import edu.ijse.crs.dto.UserDTO;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class CourseReportView extends javax.swing.JFrame {

    private SelectCourseView selectCourseView;
    private String courseTitle;
    private StudentController studentController = new StudentController();
    private UserController userController = new UserController();
    private EnrollmentController enrollmentController = new EnrollmentController();
    private CourseController courseController = new CourseController();

    /**
     * Creates new form StudentReportView
     */
    public CourseReportView(SelectCourseView selectCourseView) {
        this.selectCourseView = selectCourseView;
        this.courseTitle = selectCourseView.getSelectedCourse();

        initComponents();
        displaySelectedCourse();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        lblCourseId = new javax.swing.JLabel();
        lblCourseIdDisplay = new javax.swing.JLabel();
        lblCourseTitleDisplay = new javax.swing.JLabel();
        lblCourseTitle = new javax.swing.JLabel();
        lblCreditHoursDisplay = new javax.swing.JLabel();
        lblCreditHours = new javax.swing.JLabel();
        lblDepartmentDisplay = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        lblMaxEnrollmentDisplay = new javax.swing.JLabel();
        lblMaxEnrollment = new javax.swing.JLabel();
        lblEnrolledStudents = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCourseReportEnrollment = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblAvailableSeats = new javax.swing.JLabel();
        lblAvailableSeatsDisplay = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(85, 136, 201));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Course Report");

        lblCourseId.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCourseId.setText("Course ID ");
        lblCourseId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCourseIdDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCourseIdDisplay.setText(" ");

        lblCourseTitleDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCourseTitleDisplay.setText(" ");

        lblCourseTitle.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCourseTitle.setText("Course Title");
        lblCourseTitle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblCreditHoursDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCreditHoursDisplay.setText(" ");

        lblCreditHours.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblCreditHours.setText("Credit Hours");
        lblCreditHours.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblDepartmentDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblDepartmentDisplay.setText(" ");

        lblDepartment.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblDepartment.setText("Department");
        lblDepartment.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblMaxEnrollmentDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblMaxEnrollmentDisplay.setText(" ");

        lblMaxEnrollment.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblMaxEnrollment.setText("Max Enrollment");
        lblMaxEnrollment.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblEnrolledStudents.setFont(new java.awt.Font("Segoe UI Historic", 1, 24)); // NOI18N
        lblEnrolledStudents.setForeground(new java.awt.Color(85, 136, 201));
        lblEnrolledStudents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEnrolledStudents.setText("Course Enrollments");

        tblCourseReportEnrollment.setBackground(new java.awt.Color(223, 232, 232));
        tblCourseReportEnrollment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCourseReportEnrollment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCourseReportEnrollmentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCourseReportEnrollment);

        btnBack.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(85, 136, 201));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblAvailableSeats.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblAvailableSeats.setText("Available Seats");
        lblAvailableSeats.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblAvailableSeatsDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblAvailableSeatsDisplay.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCourseTitle)
                            .addComponent(lblCourseId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCourseIdDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCourseTitleDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCreditHours)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCreditHoursDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaxEnrollment)
                    .addComponent(lblDepartment)
                    .addComponent(lblAvailableSeats))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaxEnrollmentDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDepartmentDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblAvailableSeatsDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblEnrolledStudents)
                        .addGap(298, 298, 298))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblHeader)
                        .addGap(270, 270, 270))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblHeader)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourseId)
                            .addComponent(lblCourseIdDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCourseTitle)
                            .addComponent(lblCourseTitleDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCreditHours)
                            .addComponent(lblCreditHoursDisplay)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDepartment)
                            .addComponent(lblDepartmentDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaxEnrollment)
                            .addComponent(lblMaxEnrollmentDisplay))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAvailableSeats)
                            .addComponent(lblAvailableSeatsDisplay))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblEnrolledStudents)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        back();
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblCourseReportEnrollmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCourseReportEnrollmentMouseClicked

    }//GEN-LAST:event_tblCourseReportEnrollmentMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAvailableSeats;
    private javax.swing.JLabel lblAvailableSeatsDisplay;
    private javax.swing.JLabel lblCourseId;
    private javax.swing.JLabel lblCourseIdDisplay;
    private javax.swing.JLabel lblCourseTitle;
    private javax.swing.JLabel lblCourseTitleDisplay;
    private javax.swing.JLabel lblCreditHours;
    private javax.swing.JLabel lblCreditHoursDisplay;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblDepartmentDisplay;
    private javax.swing.JLabel lblEnrolledStudents;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblMaxEnrollment;
    private javax.swing.JLabel lblMaxEnrollmentDisplay;
    private javax.swing.JTable tblCourseReportEnrollment;
    // End of variables declaration//GEN-END:variables

    private void back() {
        this.setVisible(false);
        selectCourseView.setVisible(true);
    }

    public void loadTable() {
        try {

            String columns[] = {"Enrollment ID", "Student", "Semester", "Grade"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {

                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblCourseReportEnrollment.setModel(dtm);
            
            
            CourseDTO course=courseController.getCourseByCourseTitle(courseTitle);
            ArrayList<EnrollmentDTO> enrollmentDtos = enrollmentController.getAllEnrollmentByCourseId(course.getCourseId());
            
            if (enrollmentDtos != null) {
                for (EnrollmentDTO enrollmentDto : enrollmentDtos) {
                    
                    StudentDTO studentDto=studentController.getStudent(enrollmentDto.getStudentId());
                    Object[] rowData = {enrollmentDto.getEnrollmentId(),
                        studentDto.getName(),
                        enrollmentDto.getSemester(),
                        enrollmentDto.getGrade()};
                    dtm.addRow(rowData);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    private void displaySelectedCourse() {
        
        if (courseTitle == null || courseTitle.trim().isEmpty()) {
            lblCourseIdDisplay.setText("No course selected");
            return;
        }

        try {
            CourseDTO course = courseController.getCourseByCourseTitle(courseTitle);

            if (course != null) {
                lblCourseIdDisplay.setText(Integer.toString(course.getCourseId()));
                lblCourseTitleDisplay.setText(courseTitle);
                lblCreditHoursDisplay.setText(Integer.toString(course.getCreditHours()));
                lblDepartmentDisplay.setText(course.getDepartment());
                lblMaxEnrollmentDisplay.setText(Integer.toString(course.getMaxEnrollment()));
                lblAvailableSeatsDisplay.setText(Integer.toString(course.getAvailableSeats()));

            } else {
                JOptionPane.showMessageDialog(this, "course not found");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching course: " + e.getMessage());
        }
    }

}
