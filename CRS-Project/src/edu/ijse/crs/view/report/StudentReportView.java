/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.crs.view.report;

import edu.ijse.crs.view.report.SelectStudentView;
import edu.ijse.crs.controller.CourseController;
import edu.ijse.crs.controller.EnrollmentController;
import edu.ijse.crs.controller.StudentController;
import edu.ijse.crs.controller.UserController;
import edu.ijse.crs.dto.CourseDTO;
import edu.ijse.crs.dto.EnrollmentDTO;
import edu.ijse.crs.dto.StudentDTO;
import edu.ijse.crs.dto.UserDTO;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class StudentReportView extends javax.swing.JFrame {

    private SelectStudentView selectStudentView;
    private String studentName;
    private StudentController studentController = new StudentController();
    private UserController userController = new UserController();
    private EnrollmentController enrollmentController = new EnrollmentController();
    private CourseController courseController =new CourseController();

    /**
     * Creates new form StudentReportView
     */
    public StudentReportView(SelectStudentView selectStudentView) {
        this.selectStudentView = selectStudentView;
        this.studentName = selectStudentView.getSelectedStudent();

        initComponents();
        displaySelectedStudent();
        loadTable();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblHeader = new javax.swing.JLabel();
        lblStudentId = new javax.swing.JLabel();
        lblStudentIdDisplay = new javax.swing.JLabel();
        lblUserIdDisplay = new javax.swing.JLabel();
        lblUserId = new javax.swing.JLabel();
        lblStudentNameDisplay = new javax.swing.JLabel();
        lblUserNameDisplay = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblStudentName = new javax.swing.JLabel();
        lblDobDisplay = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblProgrammeDisplay = new javax.swing.JLabel();
        lblProgramme = new javax.swing.JLabel();
        lblYearDisplay = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblReportEnrollmentHeader = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblReportEnrollment = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblContact = new javax.swing.JLabel();
        lblContactDisplay = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 255));

        lblHeader.setBackground(new java.awt.Color(153, 153, 255));
        lblHeader.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(85, 136, 201));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Student Report");

        lblStudentId.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblStudentId.setText("Student ID ");
        lblStudentId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblStudentIdDisplay.setBackground(new java.awt.Color(204, 255, 204));
        lblStudentIdDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblStudentIdDisplay.setText(" ");

        lblUserIdDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblUserIdDisplay.setText(" ");

        lblUserId.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblUserId.setText("User ID");
        lblUserId.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblStudentNameDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblStudentNameDisplay.setText(" ");

        lblUserNameDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblUserNameDisplay.setText(" ");

        lblUserName.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblUserName.setText("User Name ");
        lblUserName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblStudentName.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblStudentName.setText("Student Name ");
        lblStudentName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblDobDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblDobDisplay.setText(" ");

        lblDob.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblDob.setText("Date Of Birth ");
        lblDob.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblProgrammeDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblProgrammeDisplay.setText(" ");

        lblProgramme.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblProgramme.setText("Programme ");
        lblProgramme.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblYearDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblYearDisplay.setText(" ");

        lblYear.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblYear.setText("Year ");
        lblYear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, java.awt.Color.darkGray, java.awt.Color.darkGray));

        lblReportEnrollmentHeader.setFont(new java.awt.Font("Segoe UI Historic", 1, 24)); // NOI18N
        lblReportEnrollmentHeader.setForeground(new java.awt.Color(85, 136, 201));
        lblReportEnrollmentHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReportEnrollmentHeader.setText("Enrolled Courses");

        tblReportEnrollment.setBackground(new java.awt.Color(223, 232, 232));
        tblReportEnrollment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblReportEnrollment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReportEnrollmentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblReportEnrollment);

        btnBack.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(54, 117, 154));
        btnBack.setText("Back");
        btnBack.setOpaque(true);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblContact.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblContact.setText("Contact No ");
        lblContact.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblContactDisplay.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        lblContactDisplay.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblReportEnrollmentHeader)
                        .addGap(316, 316, 316))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblStudentId)
                                    .addGap(45, 45, 45)
                                    .addComponent(lblStudentIdDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblStudentName)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblStudentNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDob)
                                    .addComponent(lblProgramme)
                                    .addComponent(lblContact)
                                    .addComponent(lblYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDobDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblProgrammeDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblYearDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblContactDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserName)
                            .addComponent(lblUserId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserIdDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUserNameDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblHeader)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentId)
                    .addComponent(lblStudentIdDisplay)
                    .addComponent(lblUserId)
                    .addComponent(lblUserIdDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentName)
                    .addComponent(lblStudentNameDisplay)
                    .addComponent(lblUserName)
                    .addComponent(lblUserNameDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDob)
                    .addComponent(lblDobDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProgramme)
                    .addComponent(lblProgrammeDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(lblYearDisplay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContact)
                    .addComponent(lblContactDisplay))
                .addGap(18, 18, 18)
                .addComponent(lblReportEnrollmentHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        back();
    }//GEN-LAST:event_btnBackActionPerformed

    private void tblReportEnrollmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReportEnrollmentMouseClicked
        
    }//GEN-LAST:event_tblReportEnrollmentMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblContactDisplay;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblDobDisplay;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblProgramme;
    private javax.swing.JLabel lblProgrammeDisplay;
    private javax.swing.JLabel lblReportEnrollmentHeader;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblStudentIdDisplay;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JLabel lblStudentNameDisplay;
    private javax.swing.JLabel lblUserId;
    private javax.swing.JLabel lblUserIdDisplay;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUserNameDisplay;
    private javax.swing.JLabel lblYear;
    private javax.swing.JLabel lblYearDisplay;
    private javax.swing.JTable tblReportEnrollment;
    // End of variables declaration//GEN-END:variables

    private void back() {
        this.setVisible(false);
        selectStudentView.setVisible(true);
    }


    private void displaySelectedStudent() {
        
        if (studentName == null || studentName.trim().isEmpty()) {
            lblStudentIdDisplay.setText("No student selected");
            return;
        }

        try {
            StudentDTO student = studentController.getStudentByStudentName(studentName);
            UserDTO user = userController.getUser(student.getUserId());

            if (student != null) {
                
                LocalDate dob = student.getDob();

                
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                String formattedDate = dob.format(formatter);

                
                lblStudentIdDisplay.setText(String.valueOf(student.getStudentId()));
                lblStudentNameDisplay.setText(student.getName());
                lblDobDisplay.setText(formattedDate);
                lblProgrammeDisplay.setText(student.getProgram());
                lblYearDisplay.setText(String.valueOf(student.getYear()));
                lblContactDisplay.setText(student.getContact());
                lblUserIdDisplay.setText(String.valueOf(student.getUserId()));
                lblUserNameDisplay.setText(user.getUserName());
            } else {
                JOptionPane.showMessageDialog(this, "Student not found");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching student: " + e.getMessage());
        }
    }

    

    public void loadTable() {
        try {

            String columns[] = {"Enrollment ID", "Student", "Course", "Semester", "Grade"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {

                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };
            tblReportEnrollment.setModel(dtm);
            StudentDTO student = studentController.getStudentByStudentName(studentName);
            
            StudentDTO studentDto=studentController.getStudent(student.getStudentId());
            ArrayList<EnrollmentDTO> enrollmentDtos = enrollmentController.getEnrollmentsByStudent(student.getStudentId());
            
            if (enrollmentDtos != null) {
                for (EnrollmentDTO enrollmentDto : enrollmentDtos) {
                    CourseDTO courseDto=courseController.getCourse(enrollmentDto.getCourseId());
                    Object[] rowData = {enrollmentDto.getEnrollmentId(),
                        studentDto.getName(),
                        courseDto.getTitle(),
                        enrollmentDto.getSemester(),
                        enrollmentDto.getGrade()};
                    dtm.addRow(rowData);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

}
